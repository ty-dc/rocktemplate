{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":""},{"location":"#copy","title":"copy","text":"<ol> <li>copy repo</li> </ol> <p>replace all 'rocktemplate' to 'YourRepoName'</p> <p>replace all 'spidernet-io' and 'spidernet.io' to 'YourOrigin'</p> <ol> <li> <p>grep \"====modify====\" * -RHn --colour  and modify all of them</p> </li> <li> <p>update api/v1/openapi.yaml and <code>make update_openapi_sdk</code></p> </li> <li> <p>redefine CRD in pkg/k8s/v1     rename directory name 'pkg/k8s/v1/rocktemplate.spidernet.io'      replace all 'mybook' to 'YourCRDName'     and <code>make update_crd_sdk</code>, and code pkg/mybookManager</p> <p>rename pkg/mybookManager and replace all 'mybook' with your CRD name in this directory</p> <p>rm charts/crds/rocktemplate.spidernet.io_mybooks.yaml </p> <p>in repo: replace all \"github.com/spidernet-io/spiderdoctor/pkg/mybookManager\" to \"github.com/spidernet-io/spiderdoctor/pkg/${crdName}Manager\" in repo: find and replace all \"mybook\" to YourCrd</p> </li> <li> <p>update charts/ , and images/ , and CODEOWNERS</p> </li> <li> <p><code>go mod tidy</code> , <code>go mod vendor</code> , <code>go vet ./...</code> , double check all is ok</p> </li> <li> <p><code>go get -u</code> , <code>go mod tidy</code> , <code>go mod vendor</code> , <code>go vet ./...</code>  , update all vendor</p> </li> <li> <p>create an empty branch 'github_pages' and mkdir 'docs'</p> </li> <li> <p>enable third app</p> </li> </ol> <p>personal github -&gt; settings -&gt; applications -&gt; configure</p> <p>codefactor: https://github.com/marketplace/codefactor and https://www.codefactor.io/dashboard</p> <p>sonarCloud: https://sonarcloud.io/projects/create</p> <p>codecov: https://github.com/marketplace/codecov  and https://app.codecov.io/gh</p> <ol> <li> <p>github seetings:       spidernet.io/REPO  -&gt; settings -&gt; secrets and variable -&gt; actions -&gt; add secret 'WELAN_PAT' , 'ACTIONS_RUNNER_DEBUG'=true , 'ACTIONS_STEP_DEBUG'=true, 'CODECOV_TOKEN'</p> <p>spidernet.io  -&gt; settings -&gt; secrets -&gt; actions -&gt; grant secret to repo</p> <p>spidernet.io/REPO  -&gt; settings -&gt; general -&gt; feature -&gt; issue</p> <p>spidernet.io/ORG  -&gt; settings -&gt; actions -&gt; general -&gt; allow github action to create pr   spidernet.io/REPO  -&gt; settings -&gt; actions -&gt; general -&gt; allow github action to create pr</p> <p>spidernet.io  -&gt; settings -&gt; packages -&gt; public </p> <p>repo -&gt; packages -&gt; package settings -&gt; Change package visibility</p> <p>create 'github_pages' branch, and repo -&gt; settings -&gt; pages -&gt; add branch 'github_pages', directory 'docs'</p> <p>repo -&gt; settings -&gt; branch -&gt; add protection rules for 'main' and 'github_pages' and 'release*'</p> <p>repo -&gt; settings -&gt; tag -&gt; add protection rules for tags</p> </li> <li> <p>add badge to readme:</p> <p>github/workflows/call-e2e.yaml</p> <p>github/workflows/badge.yaml</p> <p>auto nightly ci</p> <p>release version</p> <p>code coverage from https://app.codecov.io/gh</p> <p>go report from https://goreportcard.com</p> <p>codefactor: https://www.codefactor.io/dashboard</p> <p>sonarCloud: https://sonarcloud.io/projects</p> </li> <li> <p>build base image ,      update BASE_IMAGE in images/agent/Dockerfile and images/controller/Dockerfile     run test</p> </li> </ol>"},{"location":"#local-develop","title":"local develop","text":"<ol> <li> <p><code>make build_local_image</code></p> </li> <li> <p><code>make e2e_init</code></p> </li> <li> <p><code>make e2e_run</code></p> </li> <li> <p>check proscope, browser vists http://NodeIP:4040</p> </li> <li> <p>apply cr</p> <pre><code>cat &lt;&lt;EOF &gt; mybook.yaml\napiVersion: rocktemplate.spidernet.io/v1\nkind: Mybook\nmetadata:\n  name: test\nspec:\n  ipVersion: 4\n  subnet: \"1.0.0.0/8\"\nEOF\nkubectl apply -f mybook.yaml\n</code></pre> </li> </ol>"},{"location":"#chart-develop","title":"chart develop","text":"<p>helm repo add rock https://spidernet-io.github.io/rocktemplate/</p>"},{"location":"develop/dev/","title":"develop","text":""},{"location":"develop/dev/#local-develop","title":"local develop","text":"<ol> <li> <p><code>make build_local_image</code></p> </li> <li> <p><code>make e2e_init</code></p> </li> <li> <p><code>make e2e_run</code></p> </li> <li> <p>check proscope, browser vists http://NodeIP:4040</p> </li> </ol>"},{"location":"develop/dev/#chart-develop","title":"chart develop","text":"<p>helm repo add rocktemplate https://spidernet-io.github.io/rocktemplate</p>"},{"location":"develop/release/","title":"workflow for release","text":""},{"location":"develop/release/#pre-steps","title":"pre-steps","text":"<ul> <li> <p>update 'version' and 'appVersion' filed in 'charts/*/Chart.yaml'</p> </li> <li> <p>update version in '/VERSION'</p> </li> <li> <p>a version tag should be set on right branch. The version should go with </p> <ul> <li> <p>v0.1.0-rc0</p> </li> <li> <p>v0.1.0-rc1</p> </li> <li> <p>v0.1.0</p> </li> <li> <p>v0.1.1</p> </li> <li> <p>v0.1.2</p> </li> <li> <p>v0.2.0-rc0</p> </li> <li> <p>v0.2.0</p> </li> </ul> </li> </ul>"},{"location":"develop/release/#push-a-version-tag","title":"push a version tag","text":"<p>If a tag vx.x.x is pushed , the following steps will automatically run:</p> <ol> <li> <p>check the tag name is same with '/VERSION'</p> </li> <li> <p>create a branch named 'release-vx.x.x'</p> </li> <li> <p>build the images with the pushed tag, and push to ghcr registry</p> </li> <li> <p>generate the changelog by historical PR labeled as \"pr/release/*\"</p> <p>submit the changelog file to directory 'changelogs' of branch 'github_pages', with PR labeled as \"pr/release/robot_update_githubpage\".</p> <p>changelogs is generated by historical PR label:</p> <p>label \"release/feature-new\" to be classified to \"New Features\"</p> <p>label \"release/feature-changed\" to be classified to \"Changed Features\"</p> <p>label \"release/bug\" to be classified to \"Fixes\"</p> </li> <li> <p>build the chart package with the pushed tag, and submit a PR to branch 'github_pages' </p> <p>you cloud get the chart with command <code>helm repo add $REPO_NAME https://kdoctor-io.github.io/$REPO_NAME</code></p> </li> <li> <p>submit '/docs' to '/docs' of branch 'github_pages'</p> </li> <li> <p>create a GitHub Release attached with the chart package and changelog</p> </li> <li> <p>Finally, by hand, need approve the chart PR labeled as \"pr/release/robot_update_githubpage\" , and changelog PR labeled as \"pr/release/robot_update_githubpage\"</p> </li> </ol>"},{"location":"develop/release/#post","title":"post","text":"<ol> <li>Submit a issue of the version update to the documentation site --&gt; https://github.com/DaoCloud/DaoCloud-docs</li> </ol>"},{"location":"usage/usage/","title":"Usage","text":"<pre><code>\ncat &lt;&lt;EOF &gt; mybook1.yaml\napiVersion: rocktemplate.spidernet.io/v1\nkind: Mybook\nmetadata:\n  name: test1\nspec:\n  ipVersion: 4\n  subnet: \"1.0.0.0/8\"\nEOF\n\nkubectl apply -f mybook1.yaml\n\n\ncat &lt;&lt;EOF &gt; mybook2.yaml\napiVersion: rocktemplate.spidernet.io/v1\nkind: Mybook\nmetadata:\n  name: test2\nspec:\n  ipVersion: 4\n  subnet: \"2.0.0.0/8\"\nEOF\n\nkubectl apply -f mybook2.yaml\n\n\n</code></pre>"}]}